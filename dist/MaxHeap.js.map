{"version":3,"file":"MaxHeap.js","sources":["../src/util.js","../src/dataStructure/MinHeap.js","../src/dataStructure/MaxHeap.js"],"sourcesContent":["/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/11/18\r\n * @LastEditors:\r\n * @LastEditTime: 2020/11/18\r\n */\r\nexport const defaultEquals = function (a, b) {\r\n\treturn a === b\r\n}\r\nexport const COMPARE = {\r\n\tEQUAL: 0,\r\n\tLESS_THAN: -1,\r\n\tBIGGER_THAN: 1\r\n}\r\nexport const BALANCEFACTOR = {\r\n\tUNBALANCED_RIGHT: 1,\r\n\tSLIGHTLY_UNBALANCED_RIGHT: 2,\r\n\tBALANCED: 3,\r\n\tSLIGHTLY_UNBALANCED_LEFT: 4,\r\n\tUNBALANCED_LEFT: 5\r\n};\r\nexport function reverseCompare(compareFn) {\r\n\treturn (a, b) => compareFn(b, a);\r\n}\r\nexport function defaultCompare(a, b) {\r\n\tif (a === b) {\r\n\t\treturn COMPARE.EQUAL;\r\n\t} else if (a < b) {\r\n\t\treturn COMPARE.LESS_THAN;\r\n\t} else {\r\n\t\treturn COMPARE.BIGGER_THAN;\r\n\t}\r\n}\r\nexport function\tkeyToString(str) {\r\n\tif (str === null) {\r\n\t\treturn 'null';\r\n\t} else if (str === undefined) {\r\n\t\treturn 'undefined';\r\n\t} else if(typeof str === 'function') {\r\n\t\treturn str.toString();\r\n\t}\r\n\treturn JSON.stringify(str)\r\n}\r\nexport function swap(arr, index1, index2) {\r\n\t[arr[index1], arr[index2]] = [arr[index2], arr[index1]];\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/15\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/15\r\n */\r\nimport {defaultCompare, COMPARE, swap} from \"../util\";\r\nexport default class MinHeap {\r\n\tconstructor(compareFn = defaultCompare) {\r\n\t\tthis.heap = [];\r\n\t\tthis.comparFn = compareFn;\r\n\t}\r\n\tgetParentIndex(i) {\r\n\t\treturn i ? Math.floor((i - 1) / 2) : undefined;\r\n\t}\r\n\tgetLeftIndex(i) {\r\n\t\treturn 2 * i + 1;\r\n\t}\r\n\tgetRightIndex(i) {\r\n\t\treturn 2 * i + 2;\r\n\t}\r\n\tinsert(val) {\r\n\t\tif(val != null) {\r\n\t\t\tthis.heap.push(val);\r\n\t\t\tthis.siftUp(this.heap.length - 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tsiftUp(index) {\r\n\t\tlet parent = this.getParentIndex(index);\r\n\t\twhile (\r\n\t\t\t\tindex > 0\r\n\t\t\t\t&& this.comparFn(this.heap[parent], this.heap[index]) === COMPARE.BIGGER_THAN) {\r\n\t\t\t[this.heap[parent], this.heap[index]] = [this.heap[index], this.heap[parent]];\r\n\t\t\tindex = parent;\r\n\t\t\tparent = this.getParentIndex(index);\r\n\t\t}\r\n\t}\r\n\tsize() {\r\n\t\treturn this.heap.length;\r\n\t}\r\n\tisEmpty() {\r\n\t\treturn this.heap.length === 0;\r\n\t}\r\n\tfindMinnum() {\r\n\t\treturn this.heap[0];\r\n\t}\r\n\textract() {\r\n\t\tif(this.isEmpty()) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tif (this.size() === 1) {\r\n\t\t\treturn this.heap.shift();\r\n\t\t}\r\n\t\tswap(this.heap, 0, this.size() - 1);\r\n\t\tconst resultVal = this.heap.pop();\r\n\t\tthis.siftDown(0);\r\n\t\treturn resultVal;\r\n\t}\r\n\tgetAsArray() {\r\n\t\treturn this.heap;\r\n\t}\r\n\theapify(arry) {\r\n\t\tif (arr) {\r\n\t\t\tthis.heap = arry;\r\n\t\t}\r\n\t\tconst len = Math.floor(this.size() / 2) - 1;\r\n\t\tfor(let i = 0; i < len; i++) {\r\n\t\t\tthis.siftDown(i);\r\n\t\t}\r\n\t\treturn this.heap;\r\n\t}\r\n\tsiftDown(i) {\r\n\t\tlet ele = i;\r\n\t\tconst left = this.getLeftIndex(i);\r\n\t\tconst right = this.getRightIndex(i);\r\n\t\tconst size = this.size();\r\n\t\tif (left < size && this.comparFn(this.heap[ele], this.heap[left]) === COMPARE.BIGGER_THAN) {\r\n\t\t\tele = left;\r\n\t\t}\r\n\t\tif(right < size && this.comparFn(this.heap[ele], this.heap[right]) === COMPARE.BIGGER_THAN) {\r\n\t\t\tele = right;\r\n\t\t}\r\n\t\tif(i !== ele) {\r\n\t\t\tswap(this.heap, i, ele);\r\n\t\t\tthis.siftDown(ele);\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/15\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/15\r\n */\r\nimport MinHeap from \"./MinHeap\";\r\nimport {defaultCompare, reverseCompare} from \"../util\";\r\n\r\nexport default class MaxHeap extends MinHeap{\r\n\tconstructor(compareFn = defaultCompare) {\r\n\t\tsuper(compareFn);\r\n\t\tthis.comparFn = reverseCompare(compareFn);\r\n\t}\r\n}\r\n"],"names":["COMPARE","EQUAL","LESS_THAN","BIGGER_THAN","reverseCompare","compareFn","a","b","defaultCompare","swap","arr","index1","index2","MinHeap","constructor","heap","comparFn","getParentIndex","i","Math","floor","undefined","getLeftIndex","getRightIndex","insert","val","push","siftUp","length","index","parent","size","isEmpty","findMinnum","extract","shift","resultVal","pop","siftDown","getAsArray","heapify","arry","len","ele","left","right","MaxHeap"],"mappings":"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"}