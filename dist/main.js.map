{"version":3,"file":"main.js","sources":["../src/util.js","../src/dataStructure/Node.js","../src/dataStructure/LinkedList.js","../src/dataStructure/DoubleNode.js","../src/dataStructure/DoubleLinkedList.js","../src/dataStructure/CircularLinkedList.js","../src/dataStructure/SortLinkedList.js","../src/dataStructure/Dictionary.js","../src/dataStructure/TreeNode.js","../src/dataStructure/BinarySearchTree.js","../src/dataStructure/AVLTree.js","../src/dataStructure/MinHeap.js","../src/dataStructure/MaxHeap.js","../src/dataStructure/Graph.js","../src/dataStructure/Queue.js","../src/algorithms/grapth/breadthFirstSearch.js","../src/dataStructure/Stack.js","../src/algorithms/grapth/depthFirstSearch.js","../src/algorithms/sorting/countingSort.js","../src/main.js"],"sourcesContent":["/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/11/18\r\n * @LastEditors:\r\n * @LastEditTime: 2020/11/18\r\n */\r\nexport const defaultEquals = function (a, b) {\r\n\treturn a === b\r\n}\r\nexport const COMPARE = {\r\n\tEQUAL: 0,\r\n\tLESS_THAN: -1,\r\n\tBIGGER_THAN: 1\r\n}\r\nexport const BALANCEFACTOR = {\r\n\tUNBALANCED_RIGHT: 1,\r\n\tSLIGHTLY_UNBALANCED_RIGHT: 2,\r\n\tBALANCED: 3,\r\n\tSLIGHTLY_UNBALANCED_LEFT: 4,\r\n\tUNBALANCED_LEFT: 5\r\n};\r\nexport function reverseCompare(compareFn) {\r\n\treturn (a, b) => compareFn(b, a);\r\n}\r\nexport function defaultCompare(a, b) {\r\n\tif (a === b) {\r\n\t\treturn COMPARE.EQUAL;\r\n\t} else if (a < b) {\r\n\t\treturn COMPARE.LESS_THAN;\r\n\t} else {\r\n\t\treturn COMPARE.BIGGER_THAN;\r\n\t}\r\n}\r\nexport function\tkeyToString(str) {\r\n\tif (str === null) {\r\n\t\treturn 'null';\r\n\t} else if (str === undefined) {\r\n\t\treturn 'undefined';\r\n\t} else if(typeof str === 'function') {\r\n\t\treturn str.toString();\r\n\t}\r\n\treturn JSON.stringify(str)\r\n}\r\nexport function swap(arr, index1, index2) {\r\n\t[arr[index1], arr[index2]] = [arr[index2], arr[index1]];\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/11/18\r\n * @LastEditors:\r\n * @LastEditTime: 2020/11/18\r\n */\r\nexport class Node {\r\n\tconstructor(element, next = null) {\r\n\t\tthis.element = element;\r\n\t\tthis.next = next;\r\n\t}\r\n\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/11/18\r\n * @LastEditors:\r\n * @LastEditTime: 2020/11/18\r\n */\r\nimport { defaultEquals } from \"../util.js\";\r\nimport { Node } from './Node.js'\r\n\r\nexport default class LinkedList {\r\n\tconstructor(equalsFn = defaultEquals) {\r\n\t\tthis.count = 0;\r\n\t\tthis.head = null;\r\n\t\tthis.equalsFn = equalsFn;\r\n\t}\r\n\tgetElementAt(position) {\r\n\t\tif(position >= 0 && position <= this.count) {\r\n\t\t\tlet node = this.head;\r\n\t\t\tfor (let i = 0; i < position && !!node; i++) {\r\n\t\t\t\tnode = node.next;\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\tappend(element) {\r\n\t\tconst node = new Node(element);\r\n\t\tlet current = this.head;\r\n\t\tif(current == null) {\r\n\t\t\tthis.head = node;\r\n\t\t} else {\r\n\t\t\tcurrent = this.head;\r\n\t\t\twhile (current.next !=  null) {\r\n\t\t\t\tcurrent = current.next;\r\n\t\t\t}\r\n\t\t\tcurrent.next = node\r\n\t\t}\r\n\t\tthis.count++;\r\n\t\treturn element;\r\n\t}\r\n\tremoveAt(idx) {\r\n\t\tif (idx >= 0 && idx < this.count) {\r\n\t\t\tlet current = this.head;\r\n\t\t\tif (idx === 0) {\r\n\t\t\t\tthis.head = current.next;\r\n\t\t\t\tcurrent.next = null;\r\n\t\t\t} else {\r\n\t\t\t\tlet prev = this.getElementAt(idx - 1);\r\n\t\t\t\tcurrent = prev.next;\r\n\t\t\t\tprev.next = current.next;\r\n\t\t\t}\r\n\t\t\tthis.count--;\r\n\t\t\treturn current.element;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\tinsert(element, position = 0, dir = 'before') {\r\n\t\tif (element === undefined) {\r\n\t\t\t throw Error('缺少需要插入的元素');\r\n\t\t\t return;\r\n\t\t}\r\n\t\tif (position >= this.count) {\r\n\t\t\treturn this.append(element);\r\n\t\t}\r\n\t\tconst node = new Node(element);\r\n\t\tconst targetNode = dir === 'before' ? this.getElementAt(position - 1) : this.getElementAt(position);\r\n\t\tif (!targetNode) {\r\n\t\t\tlet prev = this.head;\r\n\t\t\tthis.head = node;\r\n\t\t\tnode.next = prev;\r\n\t\t} else {\r\n\t\t\tlet next;\r\n\t\t\tnext = targetNode.next\r\n\t\t\ttargetNode.next = node;\r\n\t\t\tnode.next = next;\r\n\t\t}\r\n\t\tthis.count++;\r\n\t\treturn element;\r\n\t}\r\n\tinsertAfter(element, position) {\r\n\t\treturn this.insert(element, position, 'after');\r\n\t}\r\n\tsize() {\r\n\t\treturn this.count;\r\n\t}\r\n\tremove() {\r\n\t\treturn this.removeAt(this.size() - 1);\r\n\t}\r\n\tremoveAll() {\r\n\t\tthis.count = 0;\r\n\t\tthis.head = null;\r\n\t}\r\n\tindexOf(element) {\r\n\t\tlet result = -1;\r\n\t\tlet node = this.head;\r\n\t\tfor (let i = 0; i < this.count; i++) {\r\n\t\t\tif (this.equalsFn(element, node.element)) {\r\n\t\t\t\tresult = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tisEmpty() {\r\n\t\treturn this.size() === 0;\r\n\t}\r\n\tgetHead() {\r\n\t\treturn this.head;\r\n\t}\r\n\ttoString() {\r\n\t\tif(this.head == null) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tlet node = this.head;\r\n\t\tlet objString = `,${node.element? JSON.stringify(node.element): node.element}`;\r\n\t\tfor (let i = 1; i < this.size(); i++) {\r\n\t\t\tobjString += `,${node.element? JSON.stringify(node.element): node.element}`;\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\t\treturn objString.substr(1);\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/11/19\r\n * @LastEditors:\r\n * @LastEditTime: 2020/11/19\r\n */\r\nimport {Node} from \"./Node\";\r\n\r\nexport class DoubleNode extends Node{\r\n\tconstructor(element, next, prev){\r\n\t\tsuper(element, next);\r\n\t\tthis.prev = prev;\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/11/19\r\n * @LastEditors:\r\n * @LastEditTime: 2020/11/19\r\n */\r\nimport LinkedList from \"./LinkedList\";\r\nimport {defaultEquals} from \"../util\";\r\nimport { DoubleNode } from \"./DoubleNode\";\r\n\r\nexport default class DoubleLinkedList extends LinkedList{\r\n\tconstructor(equalIsFn = defaultEquals){\r\n\t\tsuper(equalIsFn);\r\n\t\tthis.tail = null;\r\n\t}\r\n\tappend(element) {\r\n\t\tconst node = new DoubleNode(element);\r\n\t\tif (!this.tail) {\r\n\t\t\tthis.head = node;\r\n\t\t\tthis.tail = node;\r\n\t\t} else {\r\n\t\t\tlet cur = this.tail;\r\n\t\t\tcur.next = node;\r\n\t\t\tnode.prev = cur;\r\n\t\t\tthis.tail = node;\r\n\t\t}\r\n\t\tthis.count++;\r\n\t\treturn element;\r\n\t}\r\n\tinsert(element, position = 0, dir = 'before'){\r\n\t\tif (element === undefined) {\r\n\t\t\tthrow Error('缺少需要插入的元素');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (position >= this.count) {\r\n\t\t\treturn this.append(element);\r\n\t\t}\r\n\t\tconst node = new DoubleNode(element);\r\n\t\tlet cur;\r\n\t\tconst targetNode = dir === 'before' ? this.getElementAt(position - 1) : this.getElementAt(position);\r\n\t\tif (!targetNode) {\r\n\t\t\tcur = this.head;\r\n\t\t\tnode.next = cur;\r\n\t\t\tcur.prev = node;\r\n\t\t\tthis.head = node;\r\n\t\t} else {\r\n\t\t\tlet next;\r\n\t\t\tnext = targetNode.next\r\n\t\t\ttargetNode.next = node;\r\n\t\t\tnode.prev = targetNode;\r\n\t\t\tnode.next = next;\r\n\t\t\tnext.prev = node;\r\n\t\t}\r\n\t\tthis.count++;\r\n\t\treturn element;\r\n\t}\r\n\tgetElementAt(position) {\r\n\t\tif(position >= 0 && position <= this.count) {\r\n\t\t\tif (position > this.count/2) {\r\n\t\t\t\tlet cur = this.tail;\r\n\t\t\t\tfor (let i = this.count - 1; i > position; i--){\r\n\t\t\t\t\tcur = cur.prev;\r\n\t\t\t\t}\r\n\t\t\t\treturn cur;\r\n\t\t\t} else {\r\n\t\t\t\treturn super.getElementAt(position)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\tremoveAll() {\r\n\t\tsuper.removeAll();\r\n\t\tthis.tail = null;\r\n\t}\r\n\tremoveAt(position) {\r\n\t\tif (position >= 0 && position < this.count) {\r\n\t\t\tlet cur = this.getElementAt(position);\r\n\t\t\tif(position === 0) {\r\n\t\t\t\tthis.head = cur.next;\r\n\t\t\t\tcur.next = null;\r\n\t\t\t\tthis.prev = null;\r\n\t\t\t} else if (position === this.count - 1) {\r\n\t\t\t\tthis.tail = cur.prev;\r\n\t\t\t\tthis.tail.next = null;\r\n\t\t\t\tcur.prev = null;\r\n\t\t\t} else {\r\n\t\t\t\tlet prev = cur.prev;\r\n\t\t\t\tlet next = cur.next;\r\n\t\t\t\tprev.next = next;\r\n\t\t\t\tnext.prev = prev;\r\n\t\t\t\tcur.prev = null;\r\n\t\t\t\tcur.next = null;\r\n\t\t\t}\r\n\t\t\tthis.count--;\r\n\t\t\treturn cur.element;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/11/20\r\n * @LastEditors:\r\n * @LastEditTime: 2020/11/20\r\n */\r\nimport LinkedList from \"./LinkedList\";\r\nimport {defaultEquals} from \"../util\";\r\nimport {Node} from \"./Node\";\r\n\r\nexport default class CircularLinkedList extends LinkedList{\r\n\tconstructor(equalsFn = defaultEquals){\r\n\t\tsuper(equalsFn)\r\n\t}\r\n\tinsert(element, position = 0) {\r\n\t\tif (element === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet cur = this.head;\r\n\t\tlet node = new Node(element);\r\n\t\tif (!cur) {\r\n\t\t\tthis.head = node;\r\n\t\t\tnode.next = this.head\r\n\t\t} else if (position === 0) {\r\n\t\t\tlet lastNode = this.getElementAt(this.size() - 1);\r\n\t\t\tlet nextNode = this.head;\r\n\t\t\tthis.head = node;\r\n\t\t\tnode.next = nextNode;\r\n\t\t\tlastNode.next = node;\r\n\t\t} else {\r\n\t\t\tlet prev = this.getElementAt(position - 1);\r\n\t\t\tlet cur = prev.next;\r\n\t\t\tprev.next = node;\r\n\t\t\tnode.next = cur;\r\n\t\t}\r\n\t\tthis.count++;\r\n\t\treturn element;\r\n\t}\r\n\tappend(element){\r\n\t\tlet node = new Node(element);\r\n\t\tlet cur = this.head;\r\n\t\tif(element === undefined){\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tif(!cur) {\r\n\t\t\tthis.head = node;\r\n\t\t\tnode.next = this.head\r\n\t\t} else {\r\n\t\t\tlet cur = this.head;\r\n\t\t\tlet lastNode = this.getElementAt(this.size() - 1);\r\n\t\t\tlastNode.next = node;\r\n\t\t\tnode.next = cur;\r\n\t\t}\r\n\t\tthis.count++;\r\n\r\n\t\treturn element;\r\n\t}\r\n\tremoveAt(idx){\r\n\t\tif (idx >= 0 && idx < this.count) {\r\n\t\t\tlet current = this.head;\r\n\t\t\tif (idx === 0) {\r\n\t\t\t\tlet lastNode = this.getElementAt(this.size() - 1);\r\n\t\t\t\tthis.head = current.next;\r\n\t\t\t\tlastNode.next = current.next;\r\n\t\t\t} else {\r\n\t\t\t\tlet prev = this.getElementAt(idx - 1);\r\n\t\t\t\tcurrent = prev.next;\r\n\t\t\t\tprev.next = current.next;\r\n\t\t\t}\r\n\t\t\tthis.count--;\r\n\t\t\treturn current.element;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/11/26\r\n * @LastEditors:\r\n * @LastEditTime: 2020/11/26\r\n */\r\nimport LinkedList from \"./LinkedList\";\r\nimport {defaultEquals, defaultCompare} from \"../util\";\r\nimport {Node} from \"./Node\";\r\nexport default class SortLinkedList extends LinkedList{\r\n\tconstructor(equal = defaultEquals, defaultFn = defaultCompare){\r\n\t\tsuper(equal);\r\n\t\tthis.defaultCompare = defaultFn;\r\n\t}\r\n\tinsert(element) {\r\n\t\tif(this.isEmpty()) {\r\n\t\t\treturn super.insert(element, 0);\r\n\t\t}\r\n\t\tlet head = this.head;\r\n\t\tlet node = new Node(element);\r\n\t\tif (!head){\r\n\t\t\tthis.head = node;\r\n\t\t} else {\r\n\t\t\tlet node = this.head;\r\n\t\t\tlet i = 0;\r\n\t\t\tfor (; i < this.size() && node; i++) {\r\n\t\t\t\tconst result = this.defaultCompare(element, node.element);\r\n\t\t\t\tif (result <= 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tnode = node.next;\r\n\t\t\t}\r\n\t\t\tsuper.insert(element, i);\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/11/28\r\n * @LastEditors:\r\n * @LastEditTime: 2020/11/28\r\n */\r\nimport {keyToString} from \"../util\";\r\nclass ValueObj {\r\n\tconstructor(key, val) {\r\n\t\tthis.key = key;\r\n\t\tthis.value = val;\r\n\t}\r\n\ttoString() {\r\n\t\treturn `[#${this.key}:${this.value}]`;\r\n\t}\r\n}\r\nexport default class Dictionary {\r\n\tconstructor(toStrFn = keyToString) {\r\n\t\tthis.toStrFn = toStrFn;\r\n\t\tthis.dic = {};\r\n\t}\r\n\tset(key, val) {\r\n\t\tif(key && val) {\r\n\t\t\tconst resKey = this.toStrFn(key);\r\n\t\t\tthis.dic[resKey] = new ValueObj(resKey, val);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tremove(key) {\r\n\t\tif(this.hasKey(key)) {\r\n\t\t\tconst resKey = this.toStrFn(key);\r\n\t\t\tdelete this.dic[resKey];\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\thasKey(key) {\r\n\t\tconst resKey = this.toStrFn(key);\r\n\t\treturn this.dic[resKey] ? this.dic[resKey] : false;\r\n\t}\r\n\tget(key) {\r\n\t\treturn this.dic[this.toStrFn(key)] ? this.dic[this.toStrFn(key)]['value'] : undefined;\r\n\t}\r\n\tclear() {\r\n\t\tthis.dic = {};\r\n\t\treturn true;\r\n\t}\r\n\tsize() {\r\n\t\treturn Object.keys(this.dic).length;\r\n\t}\r\n\tisEmpty() {\r\n\t\treturn this.size() === 0;\r\n\t}\r\n\tkeys() {\r\n\t\treturn Object.keys(this.dic);\r\n\t}\r\n\tvalues() {\r\n\t\treturn this.keyValues().map(val => val.value);\r\n\t}\r\n\tkeyValues() {\r\n\t\treturn Object.values(this.dic);\r\n\t}\r\n\tforEach(callback) {\r\n\t\tif (typeof callback === 'function') {\r\n\t\t\tconst resVals = this.keyValues();\r\n\t\t\tfor (let i = 0; i < resVals.length; i++) {\r\n\t\t\t\tconst res = callback(resVals[i]['key'], resVals[i]['value']);\r\n\t\t\t\tif (res === false) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/2\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/2\r\n */\r\nexport class TreeNode {\r\n\tconstructor(key) {\r\n\t\tthis.key = key;\r\n\t\tthis.left = null;\r\n\t\tthis.right = null;\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/2\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/2\r\n */\r\nimport {defaultCompare, COMPARE} from \"../util\";\r\nimport {TreeNode} from \"./TreeNode\";\r\n\r\nexport default class BinarySearchTree {\r\n\tconstructor(compareFn = defaultCompare) {\r\n\t\tthis.compareFn = compareFn;\r\n\t\tthis.root = null;\r\n\t}\r\n\tinsert(key) {\r\n\t\tif (!this.root) {\r\n\t\t\tthis.root = new TreeNode(key);\r\n\t\t} else {\r\n\t\t\tthis.insertNode(this.root, key);\r\n\t\t}\r\n\t}\r\n\tinsertNode(node, key) {\r\n\t\tif (this.compareFn(key, node.key) === COMPARE.LESS_THAN) {\r\n\t\t\tconst leftNode = node.left;\r\n\t\t\tif (!leftNode) {\r\n\t\t\t\tnode.left = new TreeNode(key);\r\n\t\t\t} else {\r\n\t\t\t\tthis.insertNode(leftNode, key);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst rightNode = node.right;\r\n\t\t\tif (!rightNode) {\r\n\t\t\t\tnode.right = new TreeNode(key);\r\n\t\t\t} else {\r\n\t\t\t\tthis.insertNode(rightNode, key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// 中序\r\n\tinOrderTraverse(callback) {\r\n\t\tthis.inOrderTraverseNode(this.root, callback);\r\n\t}\r\n\tinOrderTraverseNode(node, callback) {\r\n\t\tif(node) {\r\n\t\t\tthis.inOrderTraverseNode(node.left, callback);\r\n\t\t\tcallback(node.key);\r\n\t\t\tthis.inOrderTraverseNode(node.right, callback);\r\n\t\t}\r\n\t}\r\n\t// 先序\r\n\tprevOrderTraverse(callback){\r\n\t\tthis.prevOrderTraverseNode(this.root, callback);\r\n\t}\r\n\tprevOrderTraverseNode(node, callback){\r\n\t\tif (node) {\r\n\t\t\tcallback(node.key);\r\n\t\t\tthis.prevOrderTraverseNode(node.left, callback);\r\n\t\t\tthis.prevOrderTraverseNode(node.right, callback);\r\n\t\t}\r\n\t}\r\n\t// 后序\r\n\tpostOrderTraverse(callback){\r\n\t\tthis.postOrderTraverseNode(this.root, callback);\r\n\t}\r\n\tpostOrderTraverseNode(node, callback){\r\n\t\tif (node) {\r\n\t\t\tthis.postOrderTraverseNode(node.left, callback);\r\n\t\t\tthis.postOrderTraverseNode(node.right, callback);\r\n\t\t\tcallback(node.key);\r\n\t\t}\r\n\t}\r\n\t// 最小值\r\n\tmin(){\r\n\t\treturn this.minNode(this.root);\r\n\t}\r\n\tminNode(node) {\r\n\t\twhile (node && node.left) {\r\n\t\t\tnode = node.left;\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\t// 最大值\r\n\tmax(){\r\n\t\treturn this.maxNode(this.root);\r\n\t}\r\n\tmaxNode(node) {\r\n\t\twhile (node && node.right) {\r\n\t\t\tnode = node.right;\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\tsearch(key) {\r\n\t\treturn this.searchNode(this.root, key);\r\n\t}\r\n\tsearchNode(node, key) {\r\n\t\tif(node){\r\n\t\t\tif (this.compareFn(key, node.key) === COMPARE.LESS_THAN) {\r\n\t\t\t\treturn this.searchNode(node.left, key);\r\n\t\t\t} else if(this.compareFn(key, node.key) === COMPARE.BIGGER_THAN){\r\n\t\t\t\treturn this.searchNode(node.right, key);\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tremove(key){\r\n\t\tthis.root = this.removeNode(this.root, key);\r\n\t}\r\n\tremoveNode(node, key){\r\n\t\tif (!node) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (this.compareFn(key, node.key) === COMPARE.LESS_THAN) {\r\n\t\t\tnode.left = this.removeNode(node.left, key);\r\n\t\t\treturn node;\r\n\t\t} else if (this.compareFn(key, node.key) === COMPARE.BIGGER_THAN) {\r\n\t\t\tnode.right = this.removeNode(node.right, key);\r\n\t\t\treturn node;\r\n\t\t} else {\r\n\t\t\tif (!node.left && !node.right) {\r\n\t\t\t\tnode = null;\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t\tif(!node.left) {\r\n\t\t\t\tnode = node.right;\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t\tif(!node.right) {\r\n\t\t\t\tnode = node.left;\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t\tlet minNode = this.minNode(node.right);\r\n\t\t\tnode.key = minNode.key;\r\n\t\t\tnode.right = this.removeNode(node.right, minNode.key);\r\n\t\t\treturn node;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/8\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/8\r\n */\r\nimport BinarySearchTre from './BinarySearchTree'\r\nimport {defaultCompare, COMPARE, BALANCEFACTOR} from \"../util\";\r\nimport {TreeNode} from \"./TreeNode\";\r\n\r\nexport default class AVLTree extends BinarySearchTre{\r\n\tconstructor(compareFn = defaultCompare ) {\r\n\t\tsuper(compareFn);\r\n\t\tthis.compareFn = compareFn;\r\n\t\tthis.root = null;\r\n\t\tthis.count = null;\r\n\t}\r\n\tgetNodeHeight(node) {\r\n\t\tif (!node) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn Math.max(this.getNodeHeight(node.left), this.getNodeHeight(node.right)) + 1;\r\n\t}\r\n\tgetBalanceFactor(node) {\r\n\t\tconst heightDifference = this.getNodeHeight(node.left) - this.getNodeHeight(node.right);\r\n\t\tswitch (heightDifference) {\r\n\t\t\tcase -2:\r\n\t\t\t\treturn BALANCEFACTOR.UNBALANCED_RIGHT;\r\n\t\t\tcase -1:\r\n\t\t\t\treturn BALANCEFACTOR.SLIGHTLY_UNBALANCED_RIGHT;\r\n\t\t\tcase 1:\r\n\t\t\t\treturn BALANCEFACTOR.SLIGHTLY_UNBALANCED_LEFT;\r\n\t\t\tcase 2:\r\n\t\t\t\treturn BALANCEFACTOR.UNBALANCED_LEFT;\r\n\t\t\tdefault:\r\n\t\t\t\treturn BALANCEFACTOR.BALANCED;\r\n\t\t}\r\n\t}\r\n\trotationLL(node) {\r\n\t\tconst tempNode = node.left;\r\n\t\tnode.left = tempNode.right;\r\n\t\ttempNode.right = node;\r\n\t\treturn tempNode;\r\n\t}\r\n\trotationRR(node) {\r\n\t\tconst tempNode = node.right;\r\n\t\tnode.right = tempNode.left;\r\n\t\ttempNode.left = node;\r\n\t\treturn tempNode;\r\n\t}\r\n\trotationLR(node) {\r\n\t\tnode.left = this.rotationRR(node.left); // 先将失去平衡节点的左子树进行右旋转；\r\n\t\treturn this.rotationLL(node); // 再对整个失去平衡的树进行左旋转\r\n\t}\r\n\trotationRL(node) {\r\n\t\tnode.right = this.rotationLL(node.right); // 先将失去平衡节点的右子树进行左旋转\r\n\t\treturn this.rotationRR(node);  // 再对整个失去平衡的树进行右旋转\r\n\t}\r\n\tinsert(key) {\r\n\t\tthis.root = this.insertNode(this.root, key);\r\n\t}\r\n\tinsertNode(node, key) {\r\n\t\tif (!node) { // 说明已经到了叶节点没有下一个节点了，这个时候可以创建一个新节点作为上一个节点的子节点\r\n\t\t\treturn new TreeNode(key);\r\n\t\t} else if (this.compareFn(key, node.key) === COMPARE.LESS_THAN) { // 如果插入的数比节点的左节点要小\r\n\t\t\tnode.left = this.insertNode(node.left, key);// 递归查找左节点\r\n\t\t} else if (this.compareFn(key, node.key) === COMPARE.BIGGER_THAN) { // 如果插入的数比右节点要大\r\n\t\t\tnode.right = this.insertNode(node.right, key); // 递归查找右节点\r\n\t\t} else {\r\n\t\t\treturn node; // 相等说明插入了相同的数不做操作\r\n\t\t}\r\n\t\tconst balanceFactor = this.getBalanceFactor(node); // 获取该节点的平衡因子\r\n\t\tif (balanceFactor === BALANCEFACTOR.UNBALANCED_LEFT) { // 说明是左子树失去平衡\r\n\t\t\tif(this.compareFn(key, node.left.key) === COMPARE.LESS_THAN) { // 如果新插入的数比失去平衡的左子树数要小，则是LL型旋转\r\n\t\t\t\tnode = this.rotationLL(node);\r\n\t\t\t} else { // 否则说明新增元素是插入失去平衡节点的左子树的右侧插入，则是LR旋转\r\n\t\t\t\treturn this.rotationLR(node);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (balanceFactor === BALANCEFACTOR.UNBALANCED_RIGHT) { // 说明是右子树失去平衡\r\n\t\t\tif (this.compareFn(key, node.right.key) === COMPARE.BIGGER_THAN) { // 如果新插入的数比失去平衡的右子树数要大，则是RR型旋转\r\n\t\t\t\tnode = this.rotationRR(node);\r\n\t\t\t} else { // 否则说明新增元素是插入失去平衡节点的右子树的左侧插入，则是RL旋转\r\n\t\t\t\treturn this.rotationRL(node);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\tremoveNode(node, key) {\r\n\t\tnode = super.removeNode(node, key);\r\n\t\tif (!node) {\r\n\t\t\treturn node; // 不需要调整平衡；\r\n\t\t}\r\n\t\tconst balanceFactor = this.getBalanceFactor(node);\r\n\t\tif(balanceFactor === BALANCEFACTOR.UNBALANCED_LEFT) {\r\n\t\t\tconst balanceFactorLeft = this.getBalanceFactor(node.left);\r\n\t\t\tif(balanceFactorLeft === BALANCEFACTOR.BALANCED || balanceFactorLeft === BALANCEFACTOR.SLIGHTLY_UNBALANCED_LEFT) {\r\n\t\t\t\treturn this.rotationLL(node);\r\n\t\t\t}\r\n\t\t\tif (balanceFactorLeft === BALANCEFACTOR.SLIGHTLY_UNBALANCED_RIGHT) {\r\n\t\t\t\treturn this.rotationLR(node.left);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(balanceFactor === BALANCEFACTOR.UNBALANCED_RIGHT) {\r\n\t\t\tconst balanceFactorRight = this.getBalanceFactor(node.right);\r\n\t\t\tif(balanceFactorRight === BALANCEFACTOR.BALANCED || balanceFactorRight === BALANCEFACTOR.SLIGHTLY_UNBALANCED_RIGHT) {\r\n\t\t\t\treturn this.rotationRR(node);\r\n\t\t\t}\r\n\t\t\tif(balanceFactorRight === BALANCEFACTOR.SLIGHTLY_UNBALANCED_LEFT) {\r\n\t\t\t\treturn this.rotationRL(node.right);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/15\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/15\r\n */\r\nimport {defaultCompare, COMPARE, swap} from \"../util\";\r\nexport default class MinHeap {\r\n\tconstructor(compareFn = defaultCompare) {\r\n\t\tthis.heap = [];\r\n\t\tthis.comparFn = compareFn;\r\n\t}\r\n\tgetParentIndex(i) {\r\n\t\treturn i ? Math.floor((i - 1) / 2) : undefined;\r\n\t}\r\n\tgetLeftIndex(i) {\r\n\t\treturn 2 * i + 1;\r\n\t}\r\n\tgetRightIndex(i) {\r\n\t\treturn 2 * i + 2;\r\n\t}\r\n\tinsert(val) {\r\n\t\tif(val != null) {\r\n\t\t\tthis.heap.push(val);\r\n\t\t\tthis.siftUp(this.heap.length - 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tsiftUp(index) {\r\n\t\tlet parent = this.getParentIndex(index);\r\n\t\twhile (\r\n\t\t\t\tindex > 0\r\n\t\t\t\t&& this.comparFn(this.heap[parent], this.heap[index]) === COMPARE.BIGGER_THAN) {\r\n\t\t\t[this.heap[parent], this.heap[index]] = [this.heap[index], this.heap[parent]];\r\n\t\t\tindex = parent;\r\n\t\t\tparent = this.getParentIndex(index);\r\n\t\t}\r\n\t}\r\n\tsize() {\r\n\t\treturn this.heap.length;\r\n\t}\r\n\tisEmpty() {\r\n\t\treturn this.heap.length === 0;\r\n\t}\r\n\tfindMinnum() {\r\n\t\treturn this.heap[0];\r\n\t}\r\n\textract() {\r\n\t\tif(this.isEmpty()) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tif (this.size() === 1) {\r\n\t\t\treturn this.heap.shift();\r\n\t\t}\r\n\t\tswap(this.heap, 0, this.size() - 1);\r\n\t\tconst resultVal = this.heap.pop();\r\n\t\tthis.siftDown(0);\r\n\t\treturn resultVal;\r\n\t}\r\n\tgetAsArray() {\r\n\t\treturn this.heap;\r\n\t}\r\n\theapify(arry) {\r\n\t\tif (arr) {\r\n\t\t\tthis.heap = arry;\r\n\t\t}\r\n\t\tconst len = Math.floor(this.size() / 2) - 1;\r\n\t\tfor(let i = 0; i < len; i++) {\r\n\t\t\tthis.siftDown(i);\r\n\t\t}\r\n\t\treturn this.heap;\r\n\t}\r\n\tsiftDown(i) {\r\n\t\tlet ele = i;\r\n\t\tconst left = this.getLeftIndex(i);\r\n\t\tconst right = this.getRightIndex(i);\r\n\t\tconst size = this.size();\r\n\t\tif (left < size && this.comparFn(this.heap[ele], this.heap[left]) === COMPARE.BIGGER_THAN) {\r\n\t\t\tele = left;\r\n\t\t}\r\n\t\tif(right < size && this.comparFn(this.heap[ele], this.heap[right]) === COMPARE.BIGGER_THAN) {\r\n\t\t\tele = right;\r\n\t\t}\r\n\t\tif(i !== ele) {\r\n\t\t\tswap(this.heap, i, ele);\r\n\t\t\tthis.siftDown(ele);\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/15\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/15\r\n */\r\nimport MinHeap from \"./MinHeap\";\r\nimport {defaultCompare, reverseCompare} from \"../util\";\r\n\r\nexport default class MaxHeap extends MinHeap{\r\n\tconstructor(compareFn = defaultCompare) {\r\n\t\tsuper(compareFn);\r\n\t\tthis.comparFn = reverseCompare(compareFn);\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/16\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/16\r\n */\r\nimport Dictionary from \"./Dictionary\";\r\n\r\nexport default class Graph {\r\n\tconstructor(isDir = false) {\r\n\t\tthis.isDir = isDir;\r\n\t\tthis.vertices = [];\r\n\t\tthis.adjList = new Dictionary();\r\n\t}\r\n\taddVertex(v) {\r\n\t\tif(!this.vertices.includes(v)) {\r\n\t\t\tthis.vertices.push(v);\r\n\t\t\tthis.adjList.set(v, []);\r\n\t\t}\r\n\t}\r\n\taddEdge(v, w) {\r\n\t\tif (!this.adjList.get(v)) {\r\n\t\t\tthis.addVertex(v);\r\n\t\t}\r\n\t\tif (!this.adjList.get(w)) {\r\n\t\t\tthis.addVertex(w);\r\n\t\t}\r\n\t\tthis.adjList.get(v).push(w);\r\n\t\tif (!this.isDir) {\r\n\t\t\tthis.adjList.get(w).push(v);\r\n\t\t}\r\n\t}\r\n\tgetVertices() {\r\n\t\treturn this.vertices;\r\n\t}\r\n\tlength() {\r\n\t\treturn this.vertices.length;\r\n\t}\r\n\tgetadjList() {\r\n\t\treturn this.adjList;\r\n\t}\r\n\ttoString() {\r\n\t\tlet str = '';\r\n\t\tfor (let i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertice = this.vertices[i]\r\n\t\t\tstr += `${vertice} --> `;\r\n\t\t\tlet adjList = this.adjList.get(vertice);\r\n\t\t\tfor (let j = 0; j < adjList.length; j++) {\r\n\t\t\t\tstr += ` ${adjList[j]}`\r\n\t\t\t}\r\n\t\t\tstr +='\\n'\r\n\t\t}\r\n\t\treturn str;\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/16\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/16\r\n */\r\nexport default class Queue {\r\n\tconstructor() {\r\n\t\tthis.counter = 0;// 计数器计算队列大小\r\n\t\tthis.items = {}; // 队列存储\r\n\t\tthis.lowestCount = 0; // 队列头\r\n\t}\r\n\t// 返回队列首位\r\n\tpeek() {\r\n\t\treturn this.items[this.lowestCount];\r\n\t}\r\n\tenqueue(element) {\r\n\t\tthis.items[this.counter] = element;\r\n\t\tthis.counter++;\r\n\t}\r\n\tdequeue() {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tconst result = this.items[this.lowestCount];\r\n\t\tdelete this.items[this.lowestCount];\r\n\t\tthis.lowestCount++;\r\n\t\treturn result;\r\n\t}\r\n\tisEmpty() {\r\n\t\treturn this.size() === 0;\r\n\t}\r\n\tsize() {\r\n\t\treturn this.counter - this.lowestCount;\r\n\t}\r\n\tclear() {\r\n\t\tthis.counter = 0;\r\n\t\tthis.lowestCount = 0;\r\n\t\tthis.items = {};\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/16\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/16\r\n */\r\nimport Queue from \"../../dataStructure/Queue\";\r\n\r\nconst COLORS = {\r\n\tWHITE: 0, // 表示该顶点还没有被访问\r\n\tGREY: 1, // 表示该顶点还没有被访问\r\n\tBLACK: 2, // 表示该顶点还没有被访问\r\n};\r\nconst initializeColor = vertices => {\r\n\tconst color = {};\r\n\tfor (let i = 0; i < vertices.length; i++) {\r\n\t\tcolor[vertices[i]] = COLORS.WHITE;\r\n\t}\r\n\treturn color;\r\n}\r\n// 优先广度搜索遍历\r\nexport const breadthFirstSearch = (grapth, startVertice, callback) => {\r\n\tconst adjList = grapth.getadjList();\r\n\tconst vertice = grapth.getVertices();\r\n\tconst Colors = initializeColor(vertice);\r\n\tconst queue = new Queue();\r\n\r\n\tqueue.enqueue(startVertice);\r\n\r\n\twhile (!queue.isEmpty()) {\r\n\t\tconst curVertice = queue.dequeue();\r\n\t\tconst neighbors = adjList.get(curVertice);\r\n\t\tColors[curVertice] = COLORS.GREY;\r\n\t\tfor (let i = 0; i < neighbors.length; i++) {\r\n\t\t\tconst neighV = neighbors[i];\r\n\t\t\tif(Colors[neighV] === COLORS.WHITE) {\r\n\t\t\t\tColors[neighV] = COLORS.GREY;\r\n\t\t\t\tqueue.enqueue(neighV);\r\n\t\t\t}\r\n\t\t}\r\n\t\tColors[curVertice] = COLORS.BLACK;\r\n\t\tif (typeof callback == 'function') {\r\n\t\t\tcallback(curVertice);\r\n\t\t}\r\n\t}\r\n};\r\n// 优先广度搜索遍历\r\nexport const BFS = (grapth, startVertice) => {\r\n\tconst adjList = grapth.getadjList();\r\n\tconst vertice = grapth.getVertices();\r\n\tconst Colors = initializeColor(vertice);\r\n\tconst queue = new Queue();\r\n\tconst distance = {};\r\n\tconst hashMap = {};\r\n\tfor(let i = 0; i < vertice.length; i++) {\r\n\t\tdistance[vertice[i]] = 0;\r\n\t\thashMap[vertice[i]] = null;\r\n\t}\r\n\tqueue.enqueue(startVertice);\r\n\r\n\twhile (!queue.isEmpty()) {\r\n\t\tconst curVertice = queue.dequeue();\r\n\t\tconst neighbors = adjList.get(curVertice);\r\n\t\tColors[curVertice] = COLORS.GREY;\r\n\t\tfor (let i = 0; i < neighbors.length; i++) {\r\n\t\t\tconst neighV = neighbors[i];\r\n\t\t\tif(Colors[neighV] === COLORS.WHITE) {\r\n\t\t\t\tdistance[neighV] = distance[curVertice] + 1;\r\n\t\t\t\thashMap[neighV] = curVertice;\r\n\t\t\t\tColors[neighV] = COLORS.GREY;\r\n\t\t\t\tqueue.enqueue(neighV);\r\n\t\t\t}\r\n\t\t}\r\n\t\tColors[curVertice] = COLORS.BLACK;\r\n\t}\r\n\treturn {\r\n\t\tdistance,\r\n\t\thashMap\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/18\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/18\r\n */\r\nexport default class Stack {\r\n\tconstructor() {\r\n\t\tthis.counter = 0;\r\n\t\tthis.items = {};\r\n\t}\r\n\tpush(val) {\r\n\t\tthis.items[this.counter] = val;\r\n\t\tthis.counter++;\r\n\t}\r\n\tsize() {\r\n\t\treturn this.counter;\r\n\t}\r\n\tisEmpty() {\r\n\t\treturn this.counter === 0;\r\n\t}\r\n\tpop() {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tthis.counter--;\r\n\t\tconst res = this.items[this.counter];\r\n\t\tdelete this.items[this.counter];\r\n\t\treturn res;\r\n\t}\r\n\tpeek() {\r\n\t\treturn this.items[this.counter - 1]\r\n\t}\r\n\tclear() {\r\n\t\tthis.counter = 0;\r\n\t\tthis.items = {};\r\n\t}\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/18\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/18\r\n */\r\nconst COLORS = {\r\n\tWHITE: 0, // 表示该顶点还没有被访问\r\n\tGREY: 1, // 表示该顶点还没有被访问\r\n\tBLACK: 2, // 表示该顶点还没有被访问\r\n};\r\nconst initializeColor = vertices => {\r\n\tconst color = {};\r\n\tfor (let i = 0; i < vertices.length; i++) {\r\n\t\tcolor[vertices[i]] = COLORS.WHITE;\r\n\t}\r\n\treturn color;\r\n};\r\nexport const depthFirstSearchVisit = (curVer, Color, adjList, callback) => {\r\n\tColor[curVer] = COLORS.GREY;\r\n\tcallback && callback(curVer);\r\n\tlet curAdj = adjList.get(curVer);\r\n\tfor (let j = 0; j < curAdj.length; j++) {\r\n\t\tlet neighVer = curAdj[j];\r\n\t\tif (Color[neighVer] === COLORS.WHITE) {\r\n\t\t\tdepthFirstSearchVisit(neighVer, Color,adjList, callback);\r\n\t\t}\r\n\t}\r\n\tColor[curVer] = COLORS.BLACK;\r\n\t// callback && callback(curVer);\r\n}\r\n// 优先深度遍历搜索\r\nexport const depthFirstSearch = (grapth, callback) => {\r\n\tconst vertices = grapth.getVertices();\r\n\tconst adjList = grapth.getadjList();\r\n\tconst Color = initializeColor(vertices);\r\n\r\n\tfor (let i = 0; i < vertices.length; i++) {\r\n\t\tlet curVer = vertices[i];\r\n\t\tif (Color[curVer] === COLORS.WHITE) {\r\n\t\t\tdepthFirstSearchVisit(curVer, Color, adjList, callback);\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\nexport const DFS = (grapth) => {\r\n\tconst vertices = grapth.getVertices();\r\n\tconst adjList = grapth.getadjList();\r\n\tconst Color = initializeColor(vertices);\r\n\tconst d = {};\r\n\tconst f = {};\r\n\tconst p = {};\r\n\tconst time = {\r\n\t\tcounter: 0\r\n\t};\r\n\tvertices.forEach((val) => {\r\n\t\td[val] = 0;\r\n\t\tf[val] = 0;\r\n\t\tp[val] = null;\r\n\t})\r\n\tfor (let i = 0; i < vertices.length; i++) {\r\n\t\tlet curVer = vertices[i];\r\n\t\tif (Color[curVer] === COLORS.WHITE) {\r\n\t\t\tDFSVisit(curVer, Color, d, f, p, time, adjList);\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tdiscovery: d,\r\n\t\tfinished: f,\r\n\t\tpredecessors: p\r\n\t}\r\n};\r\nexport const DFSVisit = (curVer, Color, d, f, p, time, adjList) => {\r\n\tColor[curVer] = COLORS.GREY;\r\n\td[curVer] = ++ time.counter;\r\n\tlet curAdj = adjList.get(curVer);\r\n\tfor (let j = 0; j < curAdj.length; j++) {\r\n\t\tlet neighVer = curAdj[j];\r\n\t\tif (Color[neighVer] === COLORS.WHITE) {\r\n\t\t\tp[neighVer] = curVer;\r\n\t\t\tDFSVisit(neighVer,  Color, d, f, p, time, adjList);\r\n\t\t}\r\n\t}\r\n\tColor[curVer] = COLORS.BLACK;\r\n\tf[curVer] = ++time.counter;\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/22\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/22\r\n */\r\n\r\nexport function countingSort(array) {\r\n\tif (array.length < 2) {\r\n\t\treturn array;\r\n\t}\r\n\tlet maxVal = findMaxValue(array);\r\n\tlet counts = new Array(maxVal+1);\r\n\tarray.forEach(ele => {\r\n\t\tif(!counts[ele]) {\r\n\t\t\tcounts[ele] = 0;\r\n\t\t}\r\n\t\tcounts[ele] ++;\r\n\t})\r\n\tlet sortedIndex = 0;\r\n\tcounts.forEach((count, i) => {\r\n\t\twhile (count > 0) {\r\n\t\t\tarray[sortedIndex++] = i;\r\n\t\t\tcount --;\r\n\t\t}\r\n\t});\r\n\treturn array;\r\n}\r\n\r\nconst findMaxValue = (array) => {\r\n\tlet max =  array[0];\r\n\tfor (let i = 1; i < array.length; i++) {\r\n\t\tif (array[i] > max){\r\n\t\t\tmax = array[i];\r\n\t\t}\r\n\t}\r\n\treturn max;\r\n}\r\n","/**\r\n * @Description:\r\n * @Author:  wuenyou\r\n * @Date: 2020/12/18\r\n * @LastEditors:\r\n * @LastEditTime: 2020/12/18\r\n */\r\nimport LinkedList from \"./dataStructure/LinkedList\";\r\nimport DoubleLinkedList from \"./dataStructure/DoubleLinkedList\";\r\nimport CircularLinkedList from \"./dataStructure/CircularLinkedList\";\r\nimport SortLinkedList from \"./dataStructure/SortLinkedList\";\r\nimport MySet from \"./dataStructure/MySet\";\r\nimport Dictionary from \"./dataStructure/Dictionary\";\r\nimport BinarySearchTree from \"./dataStructure/BinarySearchTree\";\r\nimport AVLTree from \"./dataStructure/AVLTree\";\r\nimport MinHeap from \"./dataStructure/MinHeap\";\r\nimport MaxHeap from \"./dataStructure/MaxHeap\";\r\nimport Graph from \"./dataStructure/Graph\";\r\nimport {BFS, breadthFirstSearch} from \"./algorithms/grapth/breadthFirstSearch\";\r\nimport Stack from \"./dataStructure/Stack\";\r\nimport {depthFirstSearch, DFS} from \"./algorithms/grapth/depthFirstSearch\";\r\nimport {bubbleSort} from \"./algorithms/sorting/bubbleSort\";\r\nimport {insertionSort} from \"./algorithms/sorting/insertionSort\";\r\nimport {mergeSort} from \"./algorithms/sorting/mergeSort\";\r\nimport {quickSort} from \"./algorithms/sorting/quickSort\";\r\nimport {countingSort} from \"./algorithms/sorting/countingSort\";\r\n\r\nconst linkedList = new LinkedList();\r\nlinkedList.append({val:0});\r\nlinkedList.append({val:1});\r\nlinkedList.append({val:2});\r\nlinkedList.append({val:3});\r\nlinkedList.append({val:4});\r\nlinkedList.append({val:5});\r\nconsole.log(linkedList, '=====')\r\n// console.log(linkedList.removeAt(5));\r\n// console.log(linkedList);\r\nconst doubleLinkList = new DoubleLinkedList()\r\nconsole.log(doubleLinkList)\r\nconst circularLinkedList = new CircularLinkedList();\r\nconst sortLinkedList = new SortLinkedList();\r\nconst mySet = new MySet();\r\nconst dictionary = new Dictionary();\r\nconst tree = new BinarySearchTree();\r\ntree.insert(1);\r\ntree.insert(2);\r\ntree.insert(3);\r\ntree.insert(4);\r\ntree.insert(5);\r\ntree.insert(6);\r\ntree.insert(7);\r\ntree.insert(8);\r\ntree.insert(9);\r\ntree.insert(10);\r\ntree.insert(11);\r\ntree.insert(12);\r\ntree.insert(13);\r\ntree.insert(18);\r\ntree.insert(25);\r\nlet arr = [];\r\ntree.prevOrderTraverse((key) => arr.push(key));\r\nconsole.log(arr, '先序搜索：prevOrderTraverse；搜索二叉树，退化成一个线性链表');\r\nconst avltree = new AVLTree();\r\navltree.insert(10);\r\navltree.insert(8);\r\navltree.insert(12);\r\navltree.insert(4);\r\navltree.insert(9);\r\navltree.insert(11);\r\navltree.insert(13);\r\navltree.insert(3);\r\navltree.insert(5);\r\n// avltree.insert(7);\r\n// avltree.insert(8);\r\n// avltree.insert(9);\r\n// avltree.insert(10);\r\n// avltree.insert(11);\r\n// avltree.insert(12);\r\n// avltree.insert(13);\r\n// avltree.insert(18);\r\n// avltree.insert(25);\r\nlet avlarr = [];\r\navltree.prevOrderTraverse((key) => avlarr.push(key));\r\nconsole.log(avlarr, '先序搜索：prevOrderTraverse；平衡将线性化树重新平衡为树结构');\r\nconst minHeap = new MinHeap();\r\nfor(let i = 1; i < 10; i++) {\r\n\tminHeap.insert(i)\r\n}\r\nconst maxHeap = new MaxHeap();\r\nfor(let i = 1; i < 10; i++) {\r\n\tmaxHeap.insert(i)\r\n}\r\nconst graph = new Graph()\r\ngraph.addVertex('A');\r\ngraph.addVertex('B');\r\ngraph.addVertex('C');\r\ngraph.addVertex('D');\r\ngraph.addVertex('E');\r\ngraph.addVertex('F');\r\ngraph.addVertex('G');\r\ngraph.addVertex('H');\r\ngraph.addVertex('I');\r\ngraph.addEdge('A','B');\r\ngraph.addEdge('A','C');\r\ngraph.addEdge('A','D');\r\ngraph.addEdge('B','E');\r\ngraph.addEdge('B','F');\r\ngraph.addEdge('E','I');\r\ngraph.addEdge('C','D');\r\ngraph.addEdge('C','G');\r\ngraph.addEdge('D','G');\r\ngraph.addEdge('D','H');\r\nlet BFSResult = BFS(graph, 'A');\r\nconsole.log(BFSResult, 'BFSResult');\r\nconst path = [];\r\nbreadthFirstSearch(graph, 'A', (val) => {\r\n\tpath.push(val);\r\n});\r\ndepthFirstSearch(graph, (val) => {\r\n\tconsole.log('depth:' + val);\r\n});\r\nconst DFSArr = DFS(graph);\r\nconsole.log(DFSArr, 'DFSArr')\r\nconsole.log(path.join('-->'), 'breadthFirstSearch');\r\nconst myVertices = graph.getVertices();\r\nconst fromVertex = myVertices[0];\r\nfor (let i = 1; i < myVertices.length; i++ ) {\r\n\tlet toV = myVertices[i];\r\n\tlet url = new Stack();\r\n\tfor (let v = toV; v && v != fromVertex; v = BFSResult.hashMap[toV]) {\r\n\t\turl.push(v);\r\n\t\ttoV = v;\r\n\t}\r\n\turl.push(fromVertex);\r\n\tlet str = url.pop();\r\n\twhile (!url.isEmpty()) {\r\n\t\tstr += '-->' + url.pop();\r\n\t}\r\n\tconsole.log(str);\r\n}\r\n// console.log(bubbleSort([9,8,7,6,5,4,3,2,1]));\r\nconst sortArr = [9,8,7,6,5,4,3,2,1];\r\n// console.time('构建数组')\r\n// for (let i = 1; i < 1000;i++) {\r\n// \tif(Math.random() < 0.5) {\r\n// \t\tsortArr.push(i);\r\n// \t} else {\r\n// \t\tsortArr.unshift(i);\r\n// \t}\r\n// }\r\n// console.timeEnd('构建数组'); // 1395.03076171875ms\r\n// console.time('冒泡排序');\r\n// // console.log(bubbleSort(sortArr));\r\n// bubbleSort(sortArr)\r\n// console.timeEnd('冒泡排序'); // 冒泡排序: 22628.14990234375ms\r\n// console.time('选择排序');\r\n// // console.log(insertionSort(sortArr));\r\n// insertionSort(sortArr)\r\n// console.timeEnd('选择排序');// 选择排序:  15373.854736328125ms\r\n// console.time('归并排序');\r\n// // console.log(mergeSort(sortArr));\r\n// mergeSort(sortArr)\r\n// console.timeEnd('归并排序'); // 归并排序:90.333984375ms\r\n// console.time('快速排序');\r\n// // console.log(quickSort(sortArr));\r\n// quickSort(sortArr)\r\n// console.timeEnd('快速排序'); //快速排序: 76.9599609375ms\r\n\r\nconsole.time('计数排序');\r\nconsole.log(countingSort(sortArr));;\r\nconsole.timeEnd('计数排序');\r\n"],"names":["defaultEquals","a","b","COMPARE","EQUAL","LESS_THAN","BIGGER_THAN","BALANCEFACTOR","UNBALANCED_RIGHT","SLIGHTLY_UNBALANCED_RIGHT","BALANCED","SLIGHTLY_UNBALANCED_LEFT","UNBALANCED_LEFT","reverseCompare","compareFn","defaultCompare","keyToString","str","undefined","toString","JSON","stringify","swap","arr","index1","index2","Node","constructor","element","next","LinkedList","equalsFn","count","head","getElementAt","position","node","i","append","current","removeAt","idx","prev","insert","dir","Error","targetNode","insertAfter","size","remove","removeAll","indexOf","result","isEmpty","getHead","objString","substr","DoubleNode","DoubleLinkedList","equalIsFn","tail","cur","CircularLinkedList","lastNode","nextNode","SortLinkedList","equal","defaultFn","ValueObj","key","val","value","Dictionary","toStrFn","dic","set","resKey","hasKey","get","clear","Object","keys","length","values","keyValues","map","forEach","callback","resVals","res","TreeNode","left","right","BinarySearchTree","root","insertNode","leftNode","rightNode","inOrderTraverse","inOrderTraverseNode","prevOrderTraverse","prevOrderTraverseNode","postOrderTraverse","postOrderTraverseNode","min","minNode","max","maxNode","search","searchNode","removeNode","AVLTree","BinarySearchTre","getNodeHeight","Math","getBalanceFactor","heightDifference","rotationLL","tempNode","rotationRR","rotationLR","rotationRL","balanceFactor","balanceFactorLeft","balanceFactorRight","MinHeap","heap","comparFn","getParentIndex","floor","getLeftIndex","getRightIndex","push","siftUp","index","parent","findMinnum","extract","shift","resultVal","pop","siftDown","getAsArray","heapify","arry","len","ele","MaxHeap","Graph","isDir","vertices","adjList","addVertex","v","includes","addEdge","w","getVertices","getadjList","vertice","j","Queue","counter","items","lowestCount","peek","enqueue","dequeue","COLORS","WHITE","GREY","BLACK","initializeColor","color","breadthFirstSearch","grapth","startVertice","Colors","queue","curVertice","neighbors","neighV","BFS","distance","hashMap","Stack","depthFirstSearchVisit","curVer","Color","curAdj","neighVer","depthFirstSearch","DFS","d","f","p","time","DFSVisit","discovery","finished","predecessors","countingSort","array","maxVal","findMaxValue","counts","Array","sortedIndex","linkedList","console","log","doubleLinkList","circularLinkedList","sortLinkedList","tree","avltree","avlarr","minHeap","maxHeap","graph","BFSResult","path","DFSArr","join","myVertices","fromVertex","toV","url","sortArr","timeEnd"],"mappings":"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"}